// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/kudrykv/latex-yearly-planner/internal/core/planners/entities"
	mock "github.com/stretchr/testify/mock"
)

// Builder is an autogenerated mock type for the Builder type
type Builder struct {
	mock.Mock
}

// Generate provides a mock function with given fields: _a0
func (_m *Builder) Generate(_a0 context.Context) (entities.FileStructure, error) {
	ret := _m.Called(_a0)

	var r0 entities.FileStructure
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (entities.FileStructure, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(context.Context) entities.FileStructure); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(entities.FileStructure)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBuilder interface {
	mock.TestingT
	Cleanup(func())
}

// NewBuilder creates a new instance of Builder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBuilder(t mockConstructorTestingTNewBuilder) *Builder {
	mock := &Builder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
